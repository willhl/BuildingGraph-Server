
#######
##
##     -- Space Types --
##
##     Defines a base MEP space type.
##     Further fields added by augmented 
##     types in other .graphQL files.
##
#######

### Types ###

"""
MEP Space base type
"""
type Space implements AbstractElement {
  Id: ID!
  "{'Group':'Other','Discipline':'All','SPID':'','DisplayName':'Is External','Notes':''}"
  IsExternal: Boolean
  "{'Group':'General','Discipline':'All','SPID':'','DisplayName':'Number','Notes':''}"
  Number: String!
  "{'Group':'General','Discipline':'All','SPID':'','DisplayName':'Name','Notes':''}"
  Name: String!
  "{'Group':'Geometry','Discipline':'All','SPID':'','DisplayName':'Area','Notes':''}"
  Area (units: AreaUnits = m2): Float
  "{'Group':'Geometry','Discipline':'All','SPID':'','DisplayName':'Volume','Notes':''}"
  Volume (units: VolumeUnits = m3): Float
  "{'Group':'Geometry','Discipline':'All','SPID':'','DisplayName':'Height','Notes':''}"
  Height (units: LengthUnits = m): Float
  "{'Group':'Geometry','Discipline':'All','SPID':'','DisplayName':'Center','Notes':''}"
  Center: Point

  AllElements: [AbstractElement] @relation(name:"IS_IN_SPACE",direction:IN)
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)

}


### Mutations ###

type Mutation {
  Add_AbstractElement_IS_IN_SPACE_Space(fromId:ID! toId:ID!) : String @cypher(statement:"MATCH (frn:AbstractElement {Id: $fromId}),(ton:Space {Id: $toId}) MERGE (frn)-[r:IS_IN_SPACE]->(ton)")   
  Remove_AbstractElement_IS_IN_SPACE_Space(fromId:ID! toId:ID!) : String @cypher(statement:"MATCH (frn:AbstractElement {Id: $fromId})-[r:IS_IN_SPACE]->(ton {Id: $toId}) DELETE r")
}
