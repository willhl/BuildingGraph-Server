
#######
##
##     -- IoT Types --
##
##     Types defining sensors and controls
##     and the relationships to the things they act on
##
#######


### Types ###

type Sensor implements AbstractElement {
  Name: String
  Id: ID!
  Data_URI: String
  Data_Metric_Name: String
  Data_Request_Body: String
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
  Sensing: [AbstractElement] @relation(name:"SENSING",direction:OUT)
}

type Control implements AbstractElement {
  Name: String
  Id: ID!
  ElementType: ElementType @relation(name:"IS_OF",direction:OUT)
  ModelElements: [ModelElement] @relation(name:"REALIZED_BY",direction:OUT)
  Space: Space @relation(name:"IS_IN_SPACE",direction:OUT)
  Controlling: [AbstractElement] @relation(name:"CONTROLS",direction:OUT)
}


### Augmented Types ###

type Space {
  SensorElements: [Sensor] @relation(name:"IS_IN_SPACE",direction:IN)
  Sensors: [Sensor] @relation(name:"SENSING",direction:IN)
  ControlElements: [Control] @relation(name:"IS_IN_SPACE",direction:IN)
  Controls: [Control] @relation(name:"CONTROLS",direction:IN)
}

type Furniture {
  Sensors: [Sensor] @relation(name:"SENSING",direction:IN)
  Controls: [Control] @relation(name:"CONTROLS",direction:IN)
}

type Lighting {
  Sensors: [Sensor] @relation(name:"SENSING",direction:IN)
  Controls: [Control] @relation(name:"CONTROLS",direction:IN)
}

type ElectricalLoad {
  Sensors: [Sensor] @relation(name:"SENSING",direction:IN)
  Controls: [Control] @relation(name:"CONTROLS",direction:IN)
}

type Door {
  Sensors: [Sensor] @relation(name:"SENSING",direction:IN)
  Controls: [Control] @relation(name:"CONTROLS",direction:IN)
}
